version: "3.8"

services:
  backend:
    container_name: backend
    image: backend
    build:
      dockerfile: Dockerfile
      context: ./backend
    restart: unless-stopped
    # command: npm run start:dev
    volumes:
      - ./backend/app/:/app
    ports:
      - 3000:3000
    networks:
      transcendence:
        ipv4_address: 172.19.0.40
    mem_limit: 4G

  front:
    container_name: front
    image: front
    build:
      dockerfile: Dockerfile
      context: ./front
    restart: unless-stopped
    volumes:
      - ./front/app:/app
    ports:
      - 3001:3000
    networks:
      transcendence:
        ipv4_address: 172.19.0.41
    links:
      - backend

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    # depends_on:
    #   - backend
    env_file:
      - backend/app/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      POSTGRES_DB: ${POSTGRES_DB} 
    ports:
      - 6500:5432
    volumes: 
      - postgres:/var/lib/postgresql/data
    networks:
      transcendence:
        ipv4_address: 172.19.0.42

  # postgres_admin:
  #   image: dpage/pgadmin4:7.6
  #   depends_on:
  #     - postgres
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com 
  #     PGADMIN_DEFAULT_PASSWORD: password
  #   ports:
  #     - 5050:80

networks:
  transcendence:
    name: transcendence
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1

volumes:
  postgres:
    driver: local
