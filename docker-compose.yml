version: "3.8"

x-service-base: &service-base
  init: true
  restart: unless-stopped
  environment:
    TZ: "Europe/Paris"

x-volume-base: &volume-base
  driver: local

services:
  reverse_proxy:
    <<: *service-base
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./reverse_proxy/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./reverse_proxy/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    container_name: reverse_proxy
    command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - transcendence

  postgres:
    <<: *service-base
    container_name: postgres
    image: database
    env_file:
      - ./backend/app/.env
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - 6500:5432
    volumes: 
       - postgres:/var/lib/postgresql/data
        # - ./postgres:/var/lib/postgresql/data # to see the data
    networks:
      transcendence:
        ipv4_address: 172.19.0.42
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "max_connections=200"

  backend:
    <<: *service-base
    container_name: backend
    image: backend
    env_file:
      - backend/app/.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    # command: npm run start:dev
    volumes:
      - ./backend/app/:/app
      - ./backend/script:/srv
      # - /app/node_modules
    ports:
      - 3000:3000
      - 5555:5555
    networks:
      transcendence:
        ipv4_address: 172.19.0.40
    mem_limit: 4G

  # frontProd:
  #   <<: *service-base
  #   container_name: frontProd
  #   image: nginx
  #   ports:
  #     - "8080:80"
  #   networks:
  #     transcendence:
  #       ipv4_address: 172.19.0.21

  front:
    <<: *service-base
    container_name: front
    image: front
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front/app:/app
      # - /app/node_modules
    ports:
      - 3001:3000
    networks:
      transcendence:
        ipv4_address: 172.19.0.41
    links:
      - backend


networks:
  transcendence:
    name: transcendence
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1
    internal: false

volumes:
  postgres:
    name: postgres
    driver: local