https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data


# Installation du Front.

    certaines etapes ont ete deja realise pour pouvoir rendre un code 
    a la norme,  https://vitejs.dev/guide/
    

 
 # Regardons le fichier package.json
 
    Il y a plusieurs script de demarrage
    dev build lint preview et serve.
    
    pour le dev avec les container nous allons utiliser le script 
    npm run serve
    
    pour creer la version de prod nous allons utiliser 
    npm run build
    
    pour les test de norme nous allons utliser 
    npm run lint
    
# Creation du container.
    
    creation de l'image comme ci-dessous:
    docker build -t dev_front .
    
    L'image est cree, maintenant lancement de l'image dans un container
    docker run -ti -v $(pwd)/app:/app -p 3001:3000 dev_front

    Le container est lance et le volume est Binded

    Dans le container allons dans le dossier  /app/react-ts
   
    Lancons la commande npm install 
    
    Les vulnerabilitee seront fix ulterieurement
    
    Si tout se passe bien, un dossier node_modules devrait etre cree, ainsi
    que le fichier package-lock.json.
    
    Il ne sont pas a commit sur le serveur git
    
    Nous pouvons lancer la commande:
    npm run serve
    
    Pour y acceder nous allons utiliser le port 3001 car peut faire conflit 
    en l'etat avec le back. 
    
    Voila le template de base a l'ecran.
    Le bouton count est fonctionnel :) 
    
# les differences avec le code fournis par le site 

 ## La qualite du code :)
 
    Je vous laisse explorer les differences. 
    
    Eslint est activee, verifier avec npm run lint :)
    
    Les deux erreurs du svg sont normale.

# Code avec les classes et les fonction 

    Ne soyez pas Surpris de retrouver une classe dans les component ou 
    vues de l'application. Il s'agit de lancienne facon de coder en React
    Je la trouve un peu plus pratique par habitude.
    Mais elle est plus complexe a prendre en mainn.

















































































